version: 2.1

# orbs
orbs:
  # https://circleci.com/orbs/registry/orb/circleci/node
  node: circleci/node@1.1.6
  # https://circleci.com/orbs/registry/orb/circleci/gcp-cli
  gcp-cli: circleci/gcp-cli@1.8.3

# executors
executors:
  go112-executor:
    working_directory: ~/app
    docker:
      - image: circleci/golang:1.12
    resource_class: small
  node-executor:
    working_directory: ~/app
    docker:
      - image: circleci/node:10.16.3
    resource_class: small
  gcloud-executor:
    working_directory: ~/app
    docker:
      - image: google/cloud-sdk:latest
    resource_class: small

# commands
commands:
  gcp_cli_initialize:
    description: "gcp cli initialize"
    steps:
      - gcp-cli/initialize:
          gcloud-service-key: GCLOUD_SERVICE_KEY
          google-compute-zone: GOOGLE_COMPUTE_ZONE
          google-project-id: GOOGLE_PROJECT_ID

# jobs
jobs:
  build-server:
    executor: go112-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'go-mod-{{ .Environment.CACHE_KEY }}-{{ checksum "server/go.mod" }}'
      - run:
          name: download go modules
          command: go mod download
          working_directory: server
      - save_cache:
          key: 'go-mod-{{ .Environment.CACHE_KEY }}-{{ checksum "server/go.mod" }}'
          paths:
            - /go/pkg/mod
      - run:
          name: Install GolangCI-Lint
          command: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.21.0
      - run:
          name: Run GolangCI-Lint
          command: golangci-lint run --disable-all --enable=goimports --enable=golint --enable=govet --enable=errcheck --enable=staticcheck ./...
          working_directory: server

  build-client:
    executor: node-executor
    steps:
      - checkout
      - node/with-cache:
          cache-key: "client/package-lock.json"
          cache-version: "{{ .Environment.CACHE_KEY }}"
          dir: "~/.npm"
          steps:
            - run:
                working_directory: client
                command: npm ci
          use-strict-cache: false
      - run:
          name: lint
          command: npm run lint
          working_directory: client
      - run:
          name: build
          command: npm run build
          working_directory: client

  deploy:
    executor: gcloud-executor
    steps:
      - run: gcloud --version
      - checkout
      - run:
          name: deploy
          working_directory: server
          command: |
            PROJECT=$(gcloud config list --format="value(core.project)")
            VERSION=$(git rev-parse --short=8 HEAD)
            gcloud app deploy --quiet app.yaml --project=$PROJECT --version=$VERSION

# workflows
workflows:
  build:
    jobs:
      - build-server
      - build-client
      - deploy:
          pre-steps:
            - gcp_cli_initialize
          requires:
            - build-server
            - build-client
